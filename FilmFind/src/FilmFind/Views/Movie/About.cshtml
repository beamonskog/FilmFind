@model FilmFind.ViewModels.Movie.MovieViewModel

@{
    ViewBag.Title = Model.Title;
}



<div class="container-fluid" style="background-color: #fcfcfc">
    <div class="row">
        <div class="col-sm-3">
            <img src="@Model.PosterUrl" width="250" />
        </div>
        <div class="col-md-8" style="margin-top: 10px">
            <p>
                <h3 style="display:inline">@Model.Title</h3>
                <i style="margin-left: 25px">(@Model.Year)</i>
            </p>
            <h4>@Model.Director</h4>
            <div>@Model.Genre</div>
            <p style="margin-top:20px;">
                <b>IMDB</b>: @Model.IMDBRating,
                <b>RT</b>: @Model.RottenTomatoesRating
                <br />
                <b>User Avg: </b>

                @{
                    if (Model.AverageUserRating == 0)
                    {
                        <i>not rated</i>
                    }
                    else
                    {
                        @Model.AverageUserRating
                    }
                }
            </p>
        </div>
        <div class="col-md-1">
            @if (User.Identity.IsAuthenticated)
            {
                @await Component.InvokeAsync("ToggleMovieIcons", new
           {
               movieId = @Model.MovieId,
               isInList = @Model.IsInList,
               isHyped = @Model.IsHyped,
               isFavored = @Model.IsHyped,
               isAdded = @Model.IsInList
           })}

            @*<p><a asp-controller="UserMovie" asp-action="AddUserMovie" asp-route-id="@Model.MovieId"><i class="fa fa-plus fa-2x" title="Add to my movies"></i></a><br /></p>
                <p><a asp-controller="UserMovie" asp-action="EditUserMovie" asp-route-id="@Model.MovieId"><i class="fa fa-edit fa-2x" title="edit movie"></i></a><br /></p>*@
        </div>

    </div>

    @foreach (var comment in Model.UserOpinion)
    {
        @Html.Partial("_UserComment", comment)
    }

</div>